/* rem and em do NOT depend on html font-size in media queries! 
Instead, 1rem = 1em = 16px */

/* we know that in media quesries, the dont units rem and em do not respond according to the user defines size 
but act according to the default font size, that is 16 rem */
/* first lets do for 1350px */
/* IN MEDIA QUERIES, PREFER USING em INSTEAD OF rem AS rem DOES NOT WORK IN SOME BROWSERS  */

/* so for 1300 px, we now wont write 130rem or 130em as the defined size, but we will use 1350/16 em, i.e, 84em */

/**************************/
/* BELOW 1344px (Smaller desktops) */
/**************************/

@media (max-width: 84em) {
    .hero {
      max-width: 120rem;
    }
    .heading-primary {
      font-size: 4.4rem;
    }
    .gallery {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  /**************************/
  /* BELOW 1200px (Landscape Tablets) */
  /**************************/
  
  @media (max-width: 75em) {
    /* now we can simply use the fluid units...so if we change the font- size on the html,we can achieve a new smaller or larger font */
    /* we basically change what the value of 1 rem is and so the font size at the entire page changes */
    html {
      /* 9/16 = 56.25% */
      font-size: 56.25%;
    }
  
    .grid {
      row-gap: 6.4rem;
      column-gap: 4.8rem;
    }
  
    .header {
      padding: 0 3.2rem;
    }
  
    .heading-secondary {
      font-size: 3.6rem;
    }
  
    .heading-tertiary {
      font-size: 2.4rem;
    }
  
    .hero {
      gap: 4.8rem;
    }
  
    .main-nav-links {
      gap: 3.2rem;
    }
  
    .testimonial-container {
      padding: 4.8rem;
    }
  }
  
  /**************************/
  /* BELOW 944px (Tablets) */
  /**************************/
  
  @media (max-width: 59em) {
    /* 8px/16 = 50% */
    html {
      font-size: 50%;
    }
  
    /* to make the hero section a straight where the text is centered followed by the text */
    .hero {
      grid-template-columns: 1fr;
      padding: 0 8rem;
      gap: 6.4rem;
    }
  
    .hero-img {
      width: 60%;
    }
  
    .hero-text-box,
    .hero-img-box {
      text-align: center;
    }
  
    .delivered-meals {
      justify-content: center;
      margin-top: 3.2rem;
    }
  
    .logos img {
      height: 2.4rem;
    }
  
    .step-number {
      font-size: 7.4rem;
    }
    .meal-content {
      padding: 3.2rem 4.8rem 4.8rem 3.2rem;
    }
    .section-testimonials {
      grid-template-columns: 1fr;
    }
    .gallery {
      grid-template-columns: repeat(6, 1fr);
    }
    .cta {
      /* 3/5 = 60% + 2/5 = 40% */
      grid-template-columns: 3fr 2fr;
    }
    .cta-form {
      grid-template-columns: 1fr;
    }
    .btn--form {
      margin-top: 1.2rem;
    }
    .btn-mobile-nav {
      display: block;
    }
    .main-nav {
      position: absolute;
      background-color: rgba(255, 255, 255, 0.925);
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      transition: all 0.5s ease-in;
  
      display: flex;
      justify-content: center;
      align-items: center;
      transform: translateX(100%);
  
      /* HIDE NAVIGATION */
      /* Allows no transitions at all */
      /* display: none; */
  
      /* 1) Hide it visually */
      opacity: 0;
  
      /* 2) Make it unaccessible to mouse and keyboard */
      pointer-events: none;
  
      /* 3) Hide it from screen readers */
      visibility: hidden;
    }
  
    .nav-open .main-nav {
      opacity: 1;
      pointer-events: auto;
      visibility: visible;
      transform: translateX(0);
    }
  
    .nav-open .icon-mobile-nav[name="close-outline"] {
      display: block;
    }
  
    .nav-open .icon-mobile-nav[name="menu-outline"] {
      display: none;
    }
  
    /* OPEN AND CLOSE NAVIGATION TRANSITION */
  
    .main-nav-links {
      flex-direction: column;
      gap: 4.8rem;
    }
    .main-nav-link:visited,
    .main-nav-link:link {
      font-size: 3rem;
    }
  }
  
  /**************************/
  /* BELOW 704px (Small-Tablets) */
  /**************************/
  
  @media (max-width: 44em) {
    .grid--3--cols,
    .grid--4--cols {
      grid-template-columns: repeat(2, 1fr);
    }
  
    .diets {
      grid-column: 1/3;
      justify-self: center;
    }
  
    .heading-secondary {
      margin-bottom: 4.8rem;
    }
    .pricing-plan {
      width: 100%;
    }
  
    .grid--footer {
      grid-template-columns: repeat(6, 1fr);
      /* since we have an symmetric column here where we want 3 items at the top and 2 on the bottom */
      /* we will simply just create a grid with 6 column so the to 3 elements span acorss 2 columns each and the remainin g2 span acorss 3 columns each */
    }
  
    .logo-col,
    .address-col {
      grid-column: span 3;
      grid-row: 2;
    }
  
    .nav-col {
      grid-column: span 2;
      grid-row: 1;
      margin-bottom: 3.2rem;
    }
  }
  
  /**************************/
  /* BELOW 544px (Small-Tablets) */
  /**************************/
  
  @media (max-width: 34em) {
    .grid {
      row-gap: 4.8rem;
    }
    .grid--2--cols,
    .grid--3--cols,
    .grid--4--cols {
      grid-template-columns: 1fr;
    }
  
    .pricing-plan {
      width: 70%;
      justify-self: center;
    }
  
    .hero {
      padding: 0 3.2rem;
    }
    .section-hero {
      background-color: #fdf2e9;
      padding: 2.4rem 0 6.4rem 0;
    }
    .btn,
    .btn:link,
    .btn:visited {
      padding: 2.4rem 1.6rem;
    }
  
    .hero-img {
      width: 80%;
    }
  
    .logos img {
      height: 1.2rem;
    }
  
    .meal-1 {
      grid-row: 1/2;
    }
  
    .meal-2 {
      grid-row: 2/3;
    }
  
    .no-vert-gap {
      column-gap: 0;
    }
  
    /*  this is the second element of the parent container...so\
    the number should be according to that only...the descendent selector
    is only to narrow down the element*/
    /* the number is basically just the order of the element inside the container*/
    .step-img-box:nth-child(2) {
      grid-row: 1;
    }
    .step-img-box:nth-child(6) {
      grid-row: 5;
    }
  
    /* now the gap between the each element ids the same...so to create some visual hierarchy, we can add margins to top and bottom or
    we can use the TRANSLATE property */
    /* THE TRANSLATE PROPERTY IS BASICALLY THE EASIEST PROPERTY TO MOVE THINGS AROUND WITHOUT AFFECTING THE POSITION OF THE OTHER ELEMENTS */
  
    .step-img-box {
      transform: translateY(2.4rem);
    }
  
    .testimonials {
      grid-template-columns: 1fr;
    }
  
    .gallery {
      grid-template-columns: repeat(4, 1fr);
      gap: 1.2rem;
    }
  
    .cta {
      grid-template-columns: 1fr;
      /* the image was removed as there was no content in the container and so the browser did not care to give it any height */
      /* and so for it to have a heigh, we will have to manually give it a */
    }
  
    .cta-text-box {
      padding: 3.2rem;
    }
  
    .cta-img-box {
      height: 32rem;
      grid-row: 1;
    }
  }
  
  /* AS A RULE OF THUMB, WE SHOULD USE THE SCALE DOWN THE PAGE (ADD A MEDIA QUERY) AT EVRY 200PX */
  
  /* - Font sizes (px)
  10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98
  
  - Spacing system (px)
  2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128 */
  